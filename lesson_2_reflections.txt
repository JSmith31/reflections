1.What happens when you initialize a repository? Why do you need to do it?

Команда git init инициализирует пустой git repository в текущей папке. Текущая папка становится репозиторием, в нее добавляется скрытая дирректория .git, в приглашение добавляется (master), что означает, что мы находимся on branch master, нет ни одного commit.

2.How is the staging area different from the working directory and the repository? What value do you think it offers?

Рабочая дирректория содержит файлы, staging area содержит файлы из рабочей дирректории, изменения которых я хочу зафиксировать в текущем commit, репозиторий содержит commits.

3.How can you use the staging area to make sure you have one commit per logical change?

Выполнив логическое изменение в коде, проверим, запустив ее, выполним git dif для проверки какие файлы изменены с проведения прошлого commit, для измененных файлов выполнив git diff для добавления их в staging area, затем выполинм it commit, в последнем commit будет отражено только последнее изменение.

4.What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches могут быть полезны, когда нужно сделать версию с другим языком, или добавить экспериментальную фичу, если пока не известно будет ли она добавлена в основную версию и т. п.

Master branch можно использовать для версии, которую можно предложить длугому пользователю, и можно иметь branches для разработчика.

5.How do the diagrams help you visualize the branch structure?

Команда git log не показывает полностью всю структуру commit для всех branch. Можно перейти на любую branch командой git checkout <branch> и посмотреть git log для этой branch, таким образом можно представить branch structure.
Команда для визуализации branch structure: git log --graph --oneline <branch1> <branch2>